<?xml version="1.0" encoding="UTF-8"?>
<ti:module xmlns:ti="http://ti.appcelerator.org" xmlns:android="http://schemas.android.com/apk/res/android">
	<!--
		Similar to tiapp.xml, but contains module/platform specific
		configuration in <iphone>, <android>, and <mobileweb> sections
	-->
	<iphone>
	</iphone>
	<android xmlns:android="http://schemas.android.com/apk/res/android">
		<manifest>
			<uses-permission android:name="${tiapp.properties['id']}.permission.C2D_MESSAGE"/>
			<permission android:name="${tiapp.properties['id']}.permission.C2D_MESSAGE" android:protectionLevel="signature"/>
			
			<!--CORE-->
			<!-- Keeps the processor from sleeping when a message is received. -->
			<uses-permission android:name="android.permission.WAKE_LOCK" />
			
			<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
			
			<!-- FCM connects to Firebase Services. -->
			<uses-permission android:name="android.permission.INTERNET" />
			
			<!-- This app has permission to register and receive data message. -->
			<uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />
			<!--AMAZON-->
			<permission
				android:name="${tiapp.properties['id']}.permission.RECEIVE_ADM_MESSAGE"
				android:protectionLevel="signature" />
			
			<uses-permission android:name="${tiapp.properties['id']}.permission.RECEIVE_ADM_MESSAGE" />
			
			<uses-permission android:name="com.amazon.device.messaging.permission.RECEIVE" />
			
			<!--BADGE-->
			<!--for Samsung-->
			<uses-permission android:name="com.sec.android.provider.badge.permission.READ"/>
			<uses-permission android:name="com.sec.android.provider.badge.permission.WRITE"/>
			
			<!--for htc-->
			<uses-permission android:name="com.htc.launcher.permission.READ_SETTINGS"/>
			<uses-permission android:name="com.htc.launcher.permission.UPDATE_SHORTCUT"/>
			
			<!--for sony-->
			<uses-permission android:name="com.sonyericsson.home.permission.BROADCAST_BADGE"/>
			<uses-permission android:name="com.sonymobile.home.permission.PROVIDER_INSERT_BADGE"/>
			
			<!--for apex-->
			<uses-permission android:name="com.anddoes.launcher.permission.UPDATE_COUNT"/>
			
			<!--for solid-->
			<uses-permission android:name="com.majeur.launcher.permission.UPDATE_BADGE"/>
			
			<!--for huawei-->
			<uses-permission android:name="com.huawei.android.launcher.permission.CHANGE_BADGE"/>
			<uses-permission android:name="com.huawei.android.launcher.permission.READ_SETTINGS"/>
			<uses-permission android:name="com.huawei.android.launcher.permission.WRITE_SETTINGS"/>
			
			<!--for ZUK-->
			<uses-permission android:name="android.permission.READ_APP_BADGE"/>
			
			<!--for OPPO-->
			<uses-permission android:name="com.oppo.launcher.permission.READ_SETTINGS"/>
			<uses-permission android:name="com.oppo.launcher.permission.WRITE_SETTINGS"/>
			
			<!--for EvMe-->
			<uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_READ"/>
			<uses-permission android:name="me.everything.badger.permission.BADGE_COUNT_WRITE"/>
			<!---->
			
			<application>
				<meta-data android:name="com.google.android.gms.version" android:value="11220000" />
				
				<meta-data
					android:name="com.pushwoosh.notification_service_extension"
					android:value="com.pushwoosh.module.PushwooshNotificationServiceExtension" />
				
				<meta-data android:name="com.pushwoosh.internal.plugin_provider"
				           android:value="com.pushwoosh.module.internal.TitaniumPluginProvider" />
				<!--CORE-->
				
				<activity
					android:name="com.pushwoosh.inapp.WebActivity"
					android:theme="@android:style/Theme.Translucent.NoTitleBar" />
				
				<service android:name="com.pushwoosh.inapp.InAppRetrieverService"
				         android:permission="android.permission.BIND_JOB_SERVICE" />
				
				<receiver
					android:name="com.pushwoosh.BootReceiver"
					android:enabled="true"
					android:permission="android.permission.RECEIVE_BOOT_COMPLETED">
					<intent-filter>
						<action android:name="android.intent.action.BOOT_COMPLETED" />
						
						<category android:name="android.intent.category.DEFAULT" />
					</intent-filter>
				</receiver>
				
				<service
					android:name="com.pushwoosh.FcmRegistrationService">
					<intent-filter>
						<action android:name="com.google.firebase.INSTANCE_ID_EVENT" />
					</intent-filter>
				</service>
				
				<service
					android:name="com.pushwoosh.PushFcmIntentService">
					<intent-filter>
						<action android:name="com.google.firebase.MESSAGING_EVENT" />
					</intent-filter>
				</service>
				
				<activity
					android:name="com.pushwoosh.internal.utils.PermissionActivity"
					android:theme="@android:style/Theme.Translucent.NoTitleBar" />
				
				<receiver android:name="com.pushwoosh.notification.LocalNotificationReceiver" />
				
				<service
					android:name="com.pushwoosh.internal.utils.LockScreenService"
					android:permission="android.permission.BIND_JOB_SERVICE"
					android:enabled="true"
					android:exported="false" />
				
				<provider
					android:name="com.pushwoosh.PushwooshInitProvider"
					android:authorities="${tiapp.properties['id']}.pushwooshinitprovider"
					android:enabled="true"
					android:exported="false"
					android:initOrder="50" />
				
				<service
					android:name="com.pushwoosh.PushwooshService"
					android:exported="false"
					android:permission="android.permission.BIND_JOB_SERVICE" />
				
				<receiver
					android:name="com.pushwoosh.NotificationOpenReceiver"
					android:enabled="true"
					android:exported="false" />
				
				<!--BADGE-->
				<meta-data
					android:name="com.pushwoosh.plugin.badge"
					android:value="com.pushwoosh.badge.BadgePlugin" />
				
				<!--BEACON-->
				<service
					android:name="com.pushwoosh.thirdparty.radiusnetworks.ibeacon.service.IBeaconService"
					android:enabled="true"
					android:exported="true"
					android:isolatedProcess="false"
					android:label="iBeacon" />
				<service
					android:name="com.pushwoosh.thirdparty.radiusnetworks.ibeacon.IBeaconIntentProcessor"
					android:enabled="true" />
				<service android:name="com.pushwoosh.beacon.PushBeaconService" />
				<!---->
				<!--GCM-->
				<receiver
					android:name="com.google.android.gms.gcm.GcmReceiver"
					android:exported="true"
					android:permission="com.google.android.c2dm.permission.SEND">
					<intent-filter>
						<action android:name="com.google.android.c2dm.intent.RECEIVE" />
						
						<category android:name="${tiapp.properties['id']}" />
					</intent-filter>
				</receiver>
				
				<service
					android:name="com.pushwoosh.GcmRegistrationService"
					android:exported="false">
					<intent-filter android:priority="-50">
						<action android:name="com.google.android.gms.iid.InstanceID" />
					</intent-filter>
				</service>
				
				<service
					android:name="com.pushwoosh.PushGcmIntentService"
					android:exported="false">
					<intent-filter android:priority="-50">
						<action android:name="com.google.android.c2dm.intent.RECEIVE" />
					</intent-filter>
				</service>
				
				<provider
					android:name="com.pushwoosh.gcm.GcmInitProvider"
					android:authorities="${tiapp.properties['id']}.gcmpushwooshinitprovider"
					android:enabled="true"
					android:exported="false"
					android:initOrder="53" />
				
				<!--LOCATION-->
				
				<meta-data
					android:name="com.pushwoosh.plugin.location"
					android:value="com.pushwoosh.location.LocationPlugin" />
				
				<service android:name="com.pushwoosh.location.network.GeoLocationServiceApi16" />
				
				<activity
					android:name="com.pushwoosh.location.internal.utils.ResolutionActivity"
					android:theme="@android:style/Theme.Translucent.NoTitleBar" />
				
				<service
					android:name="com.pushwoosh.location.network.GeoLocationServiceApi21"
					android:exported="true"
					android:permission="android.permission.BIND_JOB_SERVICE" />
				
				<receiver android:name="com.pushwoosh.location.geofencer.GeofenceReceiver">
					<intent-filter>
						<action android:name="${tiapp.properties['id']}.action.GEOFENCE" />
					</intent-filter>
				</receiver>
				
				<!--AMAZON-->
				<amazon:enable-feature
					android:name="com.amazon.device.messaging"
					android:required="false" />
				
				<provider
					android:name="com.pushwoosh.amazon.AmazonInitProvider"
					android:authorities="${tiapp.properties['id']}.amazonpushwooshinitprovider"
					android:enabled="true"
					android:exported="false"
					android:initOrder="52" />
				
				<service android:name="com.pushwoosh.PushAmazonIntentService" />
				
				<receiver
					android:name="com.pushwoosh.PushAmazonReceiver"
					android:permission="com.amazon.device.messaging.permission.SEND">
					<intent-filter>
						<action android:name="com.amazon.device.messaging.intent.REGISTRATION" />
						<action android:name="com.amazon.device.messaging.intent.RECEIVE" />
						
						<category android:name="${tiapp.properties['id']}" />
					</intent-filter>
				</receiver>
				<!---->
			</application>
		</manifest>
	</android>
	<mobileweb>
	</mobileweb>
</ti:module>
